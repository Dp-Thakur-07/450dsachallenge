class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
         sort(nums.begin(),nums.end());
         int n  = nums.size();
         vector<vector<int>> ans;
         int value = 0;

    for(int i = 0; i < n - 2; i++) {
        // To avoid duplicates for the first number
        if(i > 0 && arr[i] == arr[i - 1]) continue;

        int j = i + 1;  // Left pointer
        int k = n - 1;  // Right pointer

        while(j < k) {
            int sum = arr[i] + arr[j] + arr[k];

            if(sum == value) {
                ans.push_back({arr[i], arr[j], arr[k]});

                // Move both pointers to avoid duplicates
                while(j < k && arr[j] == arr[j + 1]) j++;
                while(j < k && arr[k] == arr[k - 1]) k--;

                j++;
                k--;
            } else if(sum < K) {
                j++;
            } else {
                k--;
            }
        }
    }

    return ans;
    }
};
