int numberofgasstation(long double dist , vector<int>&stations){
        int cnt = 0;
        for(int i =1;i<stations.size();i++){
            int numberinbtw = ((stations[i]-stations[i-1])/dist);
            if((stations[i]-stations[i-1])/dist==numberinbtw*dist){
                numberinbtw--;
            }
            cnt+=numberinbtw;
        }
        return cnt;
   }
   
   
   
   
    double findSmallestMaxDist(vector<int> &stations, int k) {
        // Code here
        int n = stations.size();
        long double low = 0 ; 
        long double high = 0;
        for(int i =0;i<n-1;i++){
            high = max(high , (long double)(stations[i+1]-stations[i]));
        }
        long double diff = 1e-6;
        while(high-low>diff){
            long double mid = (low+high)/(2.0);
            int cnt = numberofgasstation(mid,stations);
            if(cnt>k){
                low = mid;
            }else{
                high = mid;
            }
        }
        return high;
    }
